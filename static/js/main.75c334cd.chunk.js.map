{"version":3,"sources":["assets/m-logo.svg","text.js","components/Button.js","breakpoints.js","pages/HomePage.js","components/ResumeEntry.js","pages/ResumePage.js","components/Project.js","pages/ProjectsPage.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","workExperience","title","subtitle","startMonth","startYear","endMonth","endYear","location","description","education","skills","StyledButton","styled","button","Button","props","onClick","text","BREAKPOINTS","HomePage","Container","div","Headline","InfoSection","Image","img","history","useHistory","src","logo","push","ResumeEntry","data","Title","span","Subtitle","DateLocation","Spacer","SectionHeader","Skill","bold","SkillSection","ResumePage","jobsSection","map","job","formatSkills","arr","item","i","length","skillsSection","ProjectContainer","ProjectTitle","Project","ProjectsPage","NavLink","Link","LinksContainer","TitleContainer","NavBar","to","PageContainer","Content","App","className","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75c334cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/m-logo.adbf2a7b.svg\";","export const workExperience = [\n    {\n        title: 'Asurion',\n        subtitle: 'Software Engineer Intern',\n        startMonth: 'May',\n        startYear: '2020',\n        endMonth: 'August',\n        endYear: '2020',\n        location: 'Nashville, TN (remote)',\n        description: 'Worked with a team of engineers and designers to build a centralized web platform using Typescript React, allowing Asurion customers to access mobile device insurance coverage and benefits. Created flexible and reusable React components and implemented them in the user interface.'\n    },\n    {\n        title: 'Toast Inc.',\n        subtitle: 'Software Engineer Co-op',\n        startMonth: 'January',\n        startYear: '2020',\n        endMonth: 'April',\n        endYear: '2020',\n        location: 'Boston, MA',\n        description: 'Built and maintained software for restaurants as part of the menu management team. Worked on a React + GraphQL + Apollo web application to create a redesigned menu management experience for 30,000+ restaurants, and contributed to building an internal REST API written in Kotlin for retrieving and modifying menu data.'\n    },\n    {\n        title: 'Georgia Tech Research Institute',\n        subtitle: 'Software Developer Co-op',\n        startMonth: 'August',\n        startYear: '2018',\n        endMonth: 'August',\n        endYear: '2019',\n        location: 'Atlanta, GA',\n        description: 'Developed large-scale, multifaceted web applications for secure information sharing using Javascript (with AngularJS and ExtJS), HTML/CSS, Java, and SQL. Used Atlassian stack and Git version control to collaborate within and across development teams in the Secure Information Systems division of CIPHER lab. Contributed 1800+ lines of code to production.'\n    }\n]\n\nexport const education = {\n    title: 'Georgia Institute of Technology',\n    subtitle: 'B.S. Computational Media',\n    startMonth: 'August',\n    startYear: '2016',\n    endMonth: 'May',\n    endYear: '2021',\n    location: 'Atlanta, GA',\n    description: 'Studies fundamental concepts of programming and its applications, with an emphasis on media. Key coursework includes Object-Oriented Programming, Data Structures & Algorithms, User Interface Design, Computer Graphics, & Info Visualization.'\n}\n\nexport const skills = {\n    languages: ['JavaScript', 'TypeScript', 'Java', 'Kotlin', 'HTML/CSS', 'SQL', 'Python'],\n    frameworks: ['React', 'Angular', 'Node.js', 'jQuery', 'GraphQL', 'd3'],\n    concepts: ['Agile development', 'Git']\n\n}\n\nexport const aboutText = 'I\\'m a senior Computational Media student at Georgia Tech, graduating in May 2021 and pursuing a career in software engineering. I have a robust technical and creative skillset backed up by valuable industry experience, and hope to use these to create engaging interactive experiences as a full-stack developer.'\nexport const aboutHeadline = 'Hey! I\\'m a software engineer seeking full-time opportunities.'","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    border: none;\n    color: white;\n    background-color: #8e7cc3;\n    font-weight: bold;\n    padding: 10px;\n    font-size: 1em;\n    transition: 200ms;\n    margin: 10px;\n    :hover {\n        background-color: #674ea7;\n    }\n`\n\nconst Button = (props) => {\n    return (\n        <StyledButton onClick={props.onClick}>\n            {props.text}\n        </StyledButton>\n    )\n}\n\nexport default Button","export const BREAKPOINTS = {\n    small: '630px',\n    medium: '1024px'\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { aboutText, aboutHeadline } from '../text'\nimport Button from '../components/Button'\nimport { useHistory } from 'react-router-dom'\nimport logo from '../assets/m-logo.svg'\nimport { BREAKPOINTS } from './../breakpoints'\n\nconst HomePage = () => {\n\n    const Container = styled.div`\n        display: flex;\n    `\n\n    const Headline = styled.div`\n        font-size: 1.5em;\n    `\n\n    const InfoSection = styled.div`\n    `\n\n    const Image = styled.img`\n        overflow: auto;\n        width: 100%;\n        object-fit: contain;\n        max-width: 150px;\n        margin-right: 50px;\n        @media (max-width: ${BREAKPOINTS.small}) {\n            display: none;\n        }\n    `\n\n    const history = useHistory();\n\n    return (\n        <Container>\n            <Image src={logo} />\n            <InfoSection>\n                <Headline>{aboutHeadline}</Headline>\n                <p>{aboutText}</p>\n                <Button\n                    text='View my experience'\n                    onClick={() => history.push('/resume')}\n                ></Button>\n                <Button\n                    text='Explore my projects'\n                    onClick={() => history.push('/projects')}\n                ></Button>\n            </InfoSection>\n        </Container>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport styled from 'styled-components'\n\nconst ResumeEntry = (props) => {\n    const {\n        title,\n        subtitle,\n        startMonth,\n        startYear,\n        endMonth,\n        endYear,\n        location,\n        description\n    } = props.data\n\n    const Container = styled.div`\n        text-align: left;\n        margin-bottom: 50px;\n    `\n\n    const Title = styled.span`\n        font-weight: 600;\n        margin-right: 5px;\n        font-size: 1.2em;\n    `\n\n    const Subtitle = styled.span`\n        font-weight: 400;\n    `\n\n    const DateLocation = styled.span`\n        font-size: 0.8em;\n        display: block;\n    `\n\n    const Spacer = styled.span`\n        font-weight: bold;\n        margin: 0px 10px;\n    `;\n\n    return ( \n        <Container>\n            <Title>{title}</Title> <Subtitle>{subtitle}</Subtitle>\n            <DateLocation>\n                {startMonth} {startYear} - {endMonth} {endYear}\n                <Spacer>·</Spacer>\n                {location}\n            </DateLocation>\n            <p>{description}</p>\n        </Container>\n    )\n}\n\nexport default ResumeEntry","import React from 'react'\nimport styled from 'styled-components'\nimport { workExperience, education, skills } from '../text'\nimport ResumeEntry from '../components/ResumeEntry'\n\nconst SectionHeader = styled.div`\n    outline: solid 1px #8e7cc3;\n    color: #8e7cc3;\n    font-weight: bold;\n    font-size: 1.25em;\n    padding: 5px;\n    margin: 10px;\n    overflow: auto;\n    display: inline-block;\n`\n\nconst Skill = styled.span`\n    display: inline-block;\n    font-weight: ${props => props.bold ? 'bold' : 'initial'};\n`\n\nconst SkillSection = styled.div`\n    margin: 10px 0;\n`\n\nconst Spacer = styled.span`\n    font-weight: bold;\n    margin: 0 10px;\n    top: 5px;\n`;\n\nconst ResumePage = () => {\n    const jobsSection = workExperience.map((job) => (\n        <ResumeEntry\n            data={job}\n        />\n    ))\n\n    const formatSkills = (arr) => {\n        return <SkillSection>\n            {arr.map((item, i) => {\n                if (i === (arr.length - 1)) {\n                    return <Skill>{item}</Skill>\n                } else {\n                    return <Skill>{item}<Spacer>·</Spacer></Skill>\n                }\n            })}\n        </SkillSection>\n        \n    }\n\n    const languages = formatSkills(skills.languages)\n    const frameworks = formatSkills(skills.frameworks)\n    const concepts = formatSkills(skills.concepts)\n\n    const skillsSection = [languages, frameworks, concepts]\n\n    return (\n        <div>\n            <SectionHeader>\n                education\n            </SectionHeader>\n            <ResumeEntry \n                data={education}\n            />\n            <SectionHeader>\n                experience\n            </SectionHeader>\n            <div>{jobsSection}</div> \n            <SectionHeader>\n                skills\n            </SectionHeader>\n            <div>{skillsSection}</div>\n        </div>\n        \n    )\n}\n\nexport default ResumePage","import React from 'react'\nimport styled from 'styled-components'\n\nconst ProjectContainer = styled.div`\n    outline: solid 1px #8e7cc3;\n    margin-bottom: 10px;\n`\n\nconst ProjectTitle = styled.span`\n    font-weight: 600;\n    margin-right: 5px;\n    font-size: 1.2em;\n`\n\nconst Project = (props) => {\n    return (\n        <ProjectContainer>\n            <ProjectTitle>{props.title}</ProjectTitle>\n        </ProjectContainer>\n    )\n}\n\nexport default Project","import React from 'react'\nimport Project from '../components/Project'\n\nconst ProjectsPage = () => {\n\n\n    return (\n        <div>\n            <Project title='space escape' />\n            <Project title='info vis' />\n        </div>\n    )\n}\n\nexport default ProjectsPage","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    width: 100%;\n    background: #8e7cc3;\n    display: flex;\n    overflow: hidden;\n    text-align: left;\n    color: white;\n    align-items: center;\n`;\n\nconst NavLink = styled(Link)`\n    font-weight: bold;\n    margin: 0px 10px;\n    color: white;\n    transition: 200ms;\n    text-decoration: none;\n    :hover {\n        color: #674ea7;\n    }\n`\n\nconst LinksContainer = styled.div`\n    text-align: right;\n    flex: 1;\n    margin: 0px 20px;\n`\n\nconst TitleContainer = styled.div`\n    flex: 1;\n    padding: 10px;\n`\n\nconst Title = styled.span`\n    display: block;\n    font-weight: bold;\n    font-size: 2em;\n`\n\nconst Subtitle = styled.span`\n`;\n\nconst NavBar = () => {\n    return (\n        <Container>\n            <TitleContainer>\n                <Title>\n                    Madison McRoy\n                </Title>\n                <Subtitle>\n                    software engineer\n                </Subtitle>\n            </TitleContainer>\n            <LinksContainer>\n                <NavLink to='/'>home</NavLink>\n                <NavLink to='/resume'>resume</NavLink>\n                <NavLink to='/projects'>projects</NavLink>\n            </LinksContainer>\n        </Container>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport HomePage from './pages/HomePage'\nimport ResumePage from './pages/ResumePage'\nimport ProjectsPage from './pages/ProjectsPage'\nimport styled from 'styled-components'\nimport NavBar from './components/NavBar'\nimport { BREAKPOINTS } from './breakpoints'\n\nconst PageContainer = styled.div`\n  width: 50%;\n  margin: auto;\n  margin-top: 5%;\n  margin-bottom: 5%;\n  outline: solid 1px #8e7cc3;\n  background-color: #fff;\n  @media (max-width: ${BREAKPOINTS.medium}) {\n    width: 80%;\n  }\n  @media (max-width: ${BREAKPOINTS.small}) {\n    width: 100%;\n    min-height: 100vh;\n    margin: 0;\n  }\n`;\n\nconst Content = styled.div`\n  padding: 20px;\n`\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageContainer>\n        <NavBar />\n        <Content>\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/resume' component={ResumePage} />\n            <Route path='/projects' component={ProjectsPage} />\n          </Switch>\n        </Content>\n      </PageContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}